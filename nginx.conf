
events {
    worker_connections 1024;
} 

rtmp {
    server {
        listen $NGINX_RTMP_PORT;
        chunk_size 4096;

        application live {
            # -- Enable live streaming
            live on;
            play on;
        
            # -- API's
            on_publish http://$CORE_API/private/publish;
            on_play http://$CORE_API/private/play;
        }
    }
}

http {
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    server {
        listen $NGINX_HTTP_PORT ssl;
        ssl_certificate /tmp/streamstage/cert.crt;
        ssl_certificate_key /tmp/streamstage/cert.key;

        # 
        # RTMP Provided API's
        #  
        location /statistics {
            # Allow access only from localhost
            allow 127.0.0.1;
            $LOCAL_ONLY

            # -- What statistics to show, all for now
            rtmp_stat all;
        }

        location /control {
            # Allow access only from localhost
            allow 127.0.0.1;
            $LOCAL_ONLY
            
            rtmp_control all;
        }
        


        # 
        # Our API's
        # 

        # Map URLs to $CORE_API
        location /public {
            # CORS
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';

            # Preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' '*';
                return 204;
            }

            # Proxy to Public API
            proxy_pass http://$CORE_API/public;
        }

        location /private {
            # Allow access only from localhost
            allow 127.0.0.1;
            $LOCAL_ONLY
            
            # Proxy to Private API
            proxy_pass http://$CORE_API/private;
        }
    }
}